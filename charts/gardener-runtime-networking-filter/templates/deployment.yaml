# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.serviceName }}
  namespace: {{ .Release.Namespace}}
{{- if .Values.ignoreResources }}
  annotations:
    resources.gardener.cloud/ignore: "true"
{{- end }}
  labels:
    app.kubernetes.io/name: {{ .Values.serviceName }}
    helm.sh/chart: {{ .Values.serviceName }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.serviceName }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/configmap-runtime-networking-filter.config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        {{- if .Values.egressFilter.oauth2Secret }}
        checksum/secret-runtime-networking-filter.oauth2: {{ include (print $.Template.BasePath "/secret-oauth2.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.imageVectorOverwrite }}
        checksum/configmap-imagevector-overwrite: {{ include (print $.Template.BasePath "/configmap-imagevector-overwrite.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.metrics.enableScraping }}
        prometheus.io/name: {{ .Release.Name }}
        prometheus.io/scrape: "true"
        # default metrics endpoint in controller-runtime
        prometheus.io/port: "8080"
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ .Values.serviceName }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        networking.gardener.cloud/to-runtime-apiserver: allowed
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-private-networks: allowed
    spec:
      priorityClassName: gardener-system-900
      serviceAccountName: {{ .Values.serviceName }}
      containers:
      - name: {{ .Values.serviceName }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /gardener-runtime-networking-filter
        - --config=/etc/runtime-networking-filter/config.yaml
        - --resource-class=seed
        {{- if .Values.egressFilter.oauth2Secret }}
        - --oauth2-config-dir=/etc/runtime-networking-filter/oauth2
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: FILTER_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - mountPath: /etc/runtime-networking-filter
          name: runtime-networking-filter-config
          readOnly: true
        - mountPath: /etc/runtime-networking-filter/oauth2
          name: runtime-networking-filter-oauth
          readOnly: true

      volumes:
      - configMap:
          name: runtime-networking-filter.config
          items:
          - key: config.yaml
            path: config.yaml
        name: runtime-networking-filter-config
      {{- if .Values.egressFilter.oauth2Secret }}
      - name: runtime-networking-filter-oauth
        secret:
          secretName: runtime-networking-filter.oauth2
      {{- end }}
