//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	configv1alpha1 "github.com/gardener/gardener/extensions/pkg/apis/config/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Configuration) DeepCopyInto(out *Configuration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	if in.EgressFilter != nil {
		in, out := &in.EgressFilter, &out.EgressFilter
		*out = new(EgressFilter)
		(*in).DeepCopyInto(*out)
	}
	if in.HealthCheckConfig != nil {
		in, out := &in.HealthCheckConfig, &out.HealthCheckConfig
		*out = new(configv1alpha1.HealthCheckConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Configuration.
func (in *Configuration) DeepCopy() *Configuration {
	if in == nil {
		return nil
	}
	out := new(Configuration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Configuration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownloaderConfig) DeepCopyInto(out *DownloaderConfig) {
	*out = *in
	if in.OAuth2Endpoint != nil {
		in, out := &in.OAuth2Endpoint, &out.OAuth2Endpoint
		*out = new(string)
		**out = **in
	}
	if in.RefreshPeriod != nil {
		in, out := &in.RefreshPeriod, &out.RefreshPeriod
		*out = new(v1.Duration)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownloaderConfig.
func (in *DownloaderConfig) DeepCopy() *DownloaderConfig {
	if in == nil {
		return nil
	}
	out := new(DownloaderConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressFilter) DeepCopyInto(out *EgressFilter) {
	*out = *in
	if in.SleepDuration != nil {
		in, out := &in.SleepDuration, &out.SleepDuration
		*out = new(v1.Duration)
		**out = **in
	}
	if in.StaticFilterList != nil {
		in, out := &in.StaticFilterList, &out.StaticFilterList
		*out = make([]Filter, len(*in))
		copy(*out, *in)
	}
	if in.DownloaderConfig != nil {
		in, out := &in.DownloaderConfig, &out.DownloaderConfig
		*out = new(DownloaderConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.EnsureConnectivity != nil {
		in, out := &in.EnsureConnectivity, &out.EnsureConnectivity
		*out = new(EnsureConnectivity)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressFilter.
func (in *EgressFilter) DeepCopy() *EgressFilter {
	if in == nil {
		return nil
	}
	out := new(EgressFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnsureConnectivity) DeepCopyInto(out *EnsureConnectivity) {
	*out = *in
	if in.SeedNamespaces != nil {
		in, out := &in.SeedNamespaces, &out.SeedNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnsureConnectivity.
func (in *EnsureConnectivity) DeepCopy() *EnsureConnectivity {
	if in == nil {
		return nil
	}
	out := new(EnsureConnectivity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Filter) DeepCopyInto(out *Filter) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Filter.
func (in *Filter) DeepCopy() *Filter {
	if in == nil {
		return nil
	}
	out := new(Filter)
	in.DeepCopyInto(out)
	return out
}
